name: CI & Deploy to Infomaniak
on:
    push:
        branches: ["main"]
jobs:
    build-deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup environment
              run: |
                  echo "APP_ENV=test" > .env.test.local
                  echo "DATABASE_URL=sqlite:///:memory:" >> .env.test.local
                  echo "APP_SECRET=test" >> .env.test.local

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: "8.2"
                  extensions: mbstring, intl, pdo_mysql, opcache
                  coverage: none

            - name: Install dependencies
              run: |
                  echo "📦 Installation des dépendances..."
                  composer install --no-interaction --prefer-dist --no-scripts
                  echo "✅ Dépendances installées"

            - name: Prepare production build
              run: |
                  echo "🏗️ Préparation du build production..."
                  composer install --no-dev --prefer-dist --no-interaction --optimize-autoloader --no-scripts
                  echo "✅ Build production prêt"

            - name: Create release archive
              run: |
                  echo "📦 Création de l'archive de déploiement..."
                  mkdir build
                  tar -czf build/release.tar.gz \
                    --exclude='./.git' \
                    --exclude='./.github' \
                    --exclude='./tests' \
                    --exclude='./var/cache/*' \
                    --exclude='./var/log/*' \
                    --exclude='./.env.test*' \
                    --exclude='./phpunit.xml*' \
                    --exclude='./node_modules' \
                    --exclude='./build' \
                    .
                  mv build/release.tar.gz .
                  echo "✅ Archive créée: release.tar.gz"

            - name: Add host key
              run: |
                  mkdir -p ~/.ssh
                  ssh-keyscan -p "${{ secrets.SSH_PORT }}" "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts

            - name: Upload archive to server
              uses: appleboy/scp-action@v0.1.7
              with:
                  host: ${{ secrets.SSH_HOST }}
                  username: ${{ secrets.SSH_USER }}
                  key: ${{ secrets.SSH_KEY }}
                  port: ${{ secrets.SSH_PORT }}
                  passphrase: ${{ secrets.SSH_PASSPHRASE }}
                  source: "release.tar.gz"
                  target: "~/"

            - name: Deploy to Infomaniak
              uses: appleboy/ssh-action@v1.2.0
              with:
                  host: ${{ secrets.SSH_HOST }}
                  username: ${{ secrets.SSH_USER }}
                  key: ${{ secrets.SSH_KEY }}
                  port: ${{ secrets.SSH_PORT }}
                  passphrase: ${{ secrets.SSH_PASSPHRASE }}
                  script: |
                      set -euo pipefail
                      PHP_CMD="/opt/php8.2/bin/php"
                      COMPOSER_CMD="/opt/php8.2/bin/composer"
                      WEB_DIR="sites/apimemoire"

                      echo "🚀 Début du déploiement Infomaniak..."
                      # ... (le début du script ne change pas) ...
                      if [ -d "$WEB_DIR" ]; then
                          # ... (partie sauvegarde) ...
                      fi
                      mkdir -p "$WEB_DIR"
                      # ... (partie backup de .env, etc) ...

                      echo "🧹 Nettoyage du répertoire web..."
                      cd "$WEB_DIR"
                      # ... (partie nettoyage) ...

                      echo "📦 Extraction de la nouvelle version..."
                      tar -xzf "$HOME/release.tar.gz"

                      # ... (partie restauration de .env, etc) ...
                      if [ -f "/tmp/env_backup" ]; then cp "/tmp/env_backup" ".env.local"; fi

                      echo "📦 Installation des dépendances..."
                      # On désactive les scripts automatiques pour les lancer manuellement et proprement
                      $COMPOSER_CMD install --no-dev --prefer-dist --no-interaction --optimize-autoloader --no-scripts

                      if [ -f bin/console ]; then
                          echo "⚙️ Configuration Symfony en forçant l'environnement PROD..."
                          
                          # On vide le cache explicitement en mode prod
                          $PHP_CMD bin/console cache:clear --env=prod

                          # Migrations en mode prod
                          $PHP_CMD bin/console doctrine:migrations:migrate --env=prod --no-interaction --allow-no-migration || echo "⚠️ Migrations non appliquées"
                          
                          # Warmup du cache en mode prod
                          $PHP_CMD bin/console cache:warmup --env=prod || true
                          
                          # API Platform doc en mode prod
                          $PHP_CMD bin/console api:openapi:export --yaml --env=prod > public/api-docs.yaml 2>/dev/null || echo "📚 Documentation API non générée"
                      fi

                      # ... (le reste du script ne change pas) ...
                      echo "✅ Déploiement Infomaniak terminé avec succès!"
